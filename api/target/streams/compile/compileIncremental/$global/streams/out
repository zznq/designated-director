[0m[[0m[0mdebug[0m] [0m[0mInvalidating /home/zznq/.ivy2/cache/com.typesafe.akka/akka-http_2.12/jars/akka-http_2.12-10.1.1.jar: class akka.http.scaladsl.marshalling.PredefinedToResponseMarshallers now provided by /Users/zznq/.ivy2/cache/com.typesafe.akka/akka-http_2.12/jars/akka-http_2.12-10.1.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating /home/zznq/.ivy2/cache/io.spray/spray-json_2.12/bundles/spray-json_2.12-1.3.4.jar: class spray.json.RootJsonReader now provided by /Users/zznq/.ivy2/cache/io.spray/spray-json_2.12/bundles/spray-json_2.12-1.3.4.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating /home/zznq/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.5.11.jar: class akka.stream.Materializer now provided by /Users/zznq/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.5.11.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.171-4.b10.fc27.x86_64/jre/lib/rt.jar: class java.lang.String now provided by /Users/zznq/.sbt/0.13/java9-rt-ext-oracle_corporation_10_0_1/rt.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating /home/zznq/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.5.11.jar: class akka.pattern.AskSupport now provided by /Users/zznq/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.5.11.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating /home/zznq/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.1.jar: class akka.http.scaladsl.model.StatusCode now provided by /Users/zznq/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating /home/zznq/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.6.jar: class scala.Predef$$less$colon$less now provided by /Users/zznq/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.6.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating /home/zznq/.ivy2/cache/com.typesafe.akka/akka-http-spray-json_2.12/jars/akka-http-spray-json_2.12-10.1.1.jar: class akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport now provided by /Users/zznq/.ivy2/cache/com.typesafe.akka/akka-http-spray-json_2.12/jars/akka-http-spray-json_2.12-10.1.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/home/zznq/projects/designated-director/api/src/main/scala/designated/director/actors/DraftActor.scala, /home/zznq/projects/designated-director/api/src/main/scala/designated/director/api/JsonSupport.scala, /home/zznq/projects/designated-director/api/src/main/scala/designated/director/api/WebServer.scala, /home/zznq/projects/designated-director/api/src/main/scala/designated/director/routes/DraftRoutes.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/Users/zznq/projects/designated-director/api/src/main/scala/designated/director/api/JsonSupport.scala, /Users/zznq/projects/designated-director/api/src/main/scala/designated/director/routes/LeagueRoutes.scala, /Users/zznq/projects/designated-director/api/src/main/scala/designated/director/routes/TeamRoutes.scala, /Users/zznq/projects/designated-director/api/src/main/scala/designated/director/repositories/TeamMemoryRepository.scala, /Users/zznq/projects/designated-director/api/src/main/scala/designated/director/actors/TeamActor.scala, /Users/zznq/projects/designated-director/api/src/main/scala/designated/director/routes/DraftRoutes.scala, /Users/zznq/projects/designated-director/api/src/main/scala/designated/director/api/WebServer.scala, /Users/zznq/projects/designated-director/api/src/main/scala/designated/director/actors/LeagueActor.scala, /Users/zznq/projects/designated-director/api/src/main/scala/designated/director/actors/DraftActor.scala, /Users/zznq/projects/designated-director/api/src/main/scala/designated/director/repositories/BaseRepository.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(/home/zznq/projects/designated-director/api/target/scala-2.12/classes/designated/director/actors/DraftActor$GetDrafts$.class, /home/zznq/projects/designated-director/api/target/scala-2.12/classes/designated/director/api/WebServer.class, /home/zznq/projects/designated-director/api/target/scala-2.12/classes/designated/director/actors/Drafts.class, /home/zznq/projects/designated-director/api/target/scala-2.12/classes/designated/director/actors/DraftActor$GetDraft$.class, /home/zznq/projects/designated-director/api/target/scala-2.12/classes/designated/director/actors/DraftActor$GetDraft.class, /home/zznq/projects/designated-director/api/target/scala-2.12/classes/designated/director/actors/Draft.class, /home/zznq/projects/designated-director/api/target/scala-2.12/classes/designated/director/actors/DraftActor$CreateDraft$.class, /home/zznq/projects/designated-director/api/target/scala-2.12/classes/designated/director/actors/DraftActor$CreateDraft.class, /home/zznq/projects/designated-director/api/target/scala-2.12/classes/designated/director/actors/Draft$.class, /home/zznq/projects/designated-director/api/target/scala-2.12/classes/designated/director/actors/DraftActor$DeleteDraft.class, /home/zznq/projects/designated-director/api/target/scala-2.12/classes/designated/director/actors/Drafts$.class, /home/zznq/projects/designated-director/api/target/scala-2.12/classes/designated/director/api/JsonSupport.class, /home/zznq/projects/designated-director/api/target/scala-2.12/classes/designated/director/actors/DraftActor$DeleteDraft$.class, /home/zznq/projects/designated-director/api/target/scala-2.12/classes/designated/director/routes/DraftRoutes.class, /home/zznq/projects/designated-director/api/target/scala-2.12/classes/designated/director/api/WebServer$delayedInit$body.class, /home/zznq/projects/designated-director/api/target/scala-2.12/classes/designated/director/api/WebServer$.class, /home/zznq/projects/designated-director/api/target/scala-2.12/classes/designated/director/actors/DraftActor$.class, /home/zznq/projects/designated-director/api/target/scala-2.12/classes/designated/director/actors/DraftActor.class, /home/zznq/projects/designated-director/api/target/scala-2.12/classes/designated/director/actors/DraftActor$$anonfun$receive$1.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set(/home/zznq/.ivy2/cache/com.typesafe.akka/akka-http_2.12/jars/akka-http_2.12-10.1.1.jar, /home/zznq/.ivy2/cache/io.spray/spray-json_2.12/bundles/spray-json_2.12-1.3.4.jar, /home/zznq/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.5.11.jar, /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.171-4.b10.fc27.x86_64/jre/lib/rt.jar, /home/zznq/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.5.11.jar, /home/zznq/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.1.jar, /home/zznq/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.6.jar, /home/zznq/.ivy2/cache/com.typesafe.akka/akka-http-spray-json_2.12/jars/akka-http-spray-json_2.12-10.1.1.jar)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(designated.director.actors.DraftActor.GetDraft, designated.director.api.WebServer, designated.director.actors.Drafts, designated.director.routes.DraftRoutes, designated.director.actors.DraftActor.GetDrafts, designated.director.actors.DraftActor, designated.director.actors.Draft, designated.director.actors.DraftActor.DeleteDraft, designated.director.actors.DraftActor.CreateDraft, designated.director.api.JsonSupport)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(/home/zznq/projects/designated-director/api/src/main/scala/designated/director/api/WebServer.scala, /home/zznq/projects/designated-director/api/src/main/scala/designated/director/api/JsonSupport.scala, /home/zznq/projects/designated-director/api/src/main/scala/designated/director/actors/DraftActor.scala, /home/zznq/projects/designated-director/api/src/main/scala/designated/director/routes/DraftRoutes.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set(/home/zznq/projects/designated-director/api/src/main/scala/designated/director/api/WebServer.scala, /home/zznq/projects/designated-director/api/src/main/scala/designated/director/api/JsonSupport.scala, /home/zznq/projects/designated-director/api/src/main/scala/designated/director/actors/DraftActor.scala, /home/zznq/projects/designated-director/api/src/main/scala/designated/director/routes/DraftRoutes.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(designated.director.actors.DraftActor.GetDraft, designated.director.api.WebServer, designated.director.actors.Drafts, designated.director.routes.DraftRoutes, designated.director.actors.DraftActor.GetDrafts, designated.director.actors.DraftActor, designated.director.actors.Draft, designated.director.actors.DraftActor.DeleteDraft, designated.director.actors.DraftActor.CreateDraft, designated.director.api.JsonSupport)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/Users/zznq/projects/designated-director/api/src/main/scala/designated/director/api/JsonSupport.scala, /home/zznq/projects/designated-director/api/src/main/scala/designated/director/api/WebServer.scala, /Users/zznq/projects/designated-director/api/src/main/scala/designated/director/routes/LeagueRoutes.scala, /Users/zznq/projects/designated-director/api/src/main/scala/designated/director/routes/TeamRoutes.scala, /home/zznq/projects/designated-director/api/src/main/scala/designated/director/api/JsonSupport.scala, /Users/zznq/projects/designated-director/api/src/main/scala/designated/director/repositories/TeamMemoryRepository.scala, /home/zznq/projects/designated-director/api/src/main/scala/designated/director/actors/DraftActor.scala, /Users/zznq/projects/designated-director/api/src/main/scala/designated/director/actors/TeamActor.scala, /Users/zznq/projects/designated-director/api/src/main/scala/designated/director/routes/DraftRoutes.scala, /Users/zznq/projects/designated-director/api/src/main/scala/designated/director/api/WebServer.scala, /Users/zznq/projects/designated-director/api/src/main/scala/designated/director/actors/LeagueActor.scala, /Users/zznq/projects/designated-director/api/src/main/scala/designated/director/actors/DraftActor.scala, /home/zznq/projects/designated-director/api/src/main/scala/designated/director/routes/DraftRoutes.scala, /Users/zznq/projects/designated-director/api/src/main/scala/designated/director/repositories/BaseRepository.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 10 sources: invalidated sources (14) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 10 Scala sources to /Users/zznq/projects/designated-director/api/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.5:compile for Scala 2.12.6[0m
[0m[[0m[0minfo[0m] [0m[0mNon-compiled module 'compiler-bridge_2.12' for Scala 2.12.6. Compiling...[0m
[0m[[0m[0mdebug[0m] [0m[0mCreating plain compiler interface for 2.12.6.[0m
[0m[[0m[0mdebug[0m] [0m[0m  > Arguments: [0m
[0m[[0m[0mdebug[0m] [0m[0m	-nowarn[0m
[0m[[0m[0mdebug[0m] [0m[0m	-d[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_d9f94ffa[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/zznq/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.6.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_6c01ec5a/jars/org.scala-sbt/compiler-interface/compiler-interface-1.1.5.jar:/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_6c01ec5a/jars/org.scala-sbt/util-interface/util-interface-1.1.3.jar:/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_6c01ec5a/srcs/org.scala-sbt/compiler-bridge_2.12/compiler-bridge_2.12-1.1.5-sources.jar:/Users/zznq/.ivy2/cache/org.scala-lang/scala-compiler/jars/scala-compiler-2.12.6.jar:/Users/zznq/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.12.6.jar:/Users/zznq/.ivy2/cache/org.scala-lang.modules/scala-xml_2.12/bundles/scala-xml_2.12-1.0.6.jar:/Users/zznq/.ivy2/cache/jline/jline/jars/jline-2.14.6.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/API.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/Analyzer.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/CallbackGlobal.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/ClassName.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/Command.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/Compat.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/CompilerInterface.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/ConsoleInterface.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/DelegatingReporter.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/Dependency.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/ExtractAPI.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/ExtractUsedNames.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/GlobalHelpers.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/InteractiveConsoleFactory.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/InteractiveConsoleHelper.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/InteractiveConsoleInterface.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/InteractiveConsoleResponse.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/JavaUtils.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/LocalToNonLocalClass.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/LocateClassFile.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/Log.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/Message.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m	/var/folders/fc/2f6gkblj58z28118s9lqvcg00000gn/T/sbt_52384adf/xsbt/ScaladocInterface.scala[0m
[0m[[0m[0mdebug[0m] [0m[0m      [0m
[0m[[0m[0minfo[0m] [0m[0m  Compilation completed in 59.995s.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.5:compile for Scala 2.12.6[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 24c8bf67 for Scala compiler version 2.12.6[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/zznq/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.6.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/zznq/projects/designated-director/api/target/scala-2.12/classes:/Users/zznq/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.5.11.jar:/Users/zznq/.ivy2/cache/com.typesafe/config/bundles/config-1.3.2.jar:/Users/zznq/.ivy2/cache/org.scala-lang.modules/scala-java8-compat_2.12/bundles/scala-java8-compat_2.12-0.8.0.jar:/Users/zznq/.ivy2/cache/com.typesafe.akka/akka-http_2.12/jars/akka-http_2.12-10.1.1.jar:/Users/zznq/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.1.jar:/Users/zznq/.ivy2/cache/com.typesafe.akka/akka-parsing_2.12/jars/akka-parsing_2.12-10.1.1.jar:/Users/zznq/.ivy2/cache/com.typesafe.akka/akka-http-spray-json_2.12/jars/akka-http-spray-json_2.12-10.1.1.jar:/Users/zznq/.ivy2/cache/io.spray/spray-json_2.12/bundles/spray-json_2.12-1.3.4.jar:/Users/zznq/.ivy2/cache/com.typesafe.akka/akka-http-xml_2.12/jars/akka-http-xml_2.12-10.1.1.jar:/Users/zznq/.ivy2/cache/org.scala-lang.modules/scala-xml_2.12/bundles/scala-xml_2.12-1.1.0.jar:/Users/zznq/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.5.11.jar:/Users/zznq/.ivy2/cache/com.typesafe.akka/akka-protobuf_2.12/jars/akka-protobuf_2.12-2.5.11.jar:/Users/zznq/.ivy2/cache/org.reactivestreams/reactive-streams/jars/reactive-streams-1.0.2.jar:/Users/zznq/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.2.2.jar:/Users/zznq/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.12/bundles/scala-parser-combinators_2.12-1.0.4.jar:/Users/zznq/.ivy2/cache/com.github.swagger-akka-http/swagger-akka-http_2.12/jars/swagger-akka-http_2.12-0.14.0.jar:/Users/zznq/.ivy2/cache/io.swagger/swagger-core/bundles/swagger-core-1.5.18.jar:/Users/zznq/.ivy2/cache/org.apache.commons/commons-lang3/jars/commons-lang3-3.2.1.jar:/Users/zznq/.ivy2/cache/org.slf4j/slf4j-api/jars/slf4j-api-1.7.25.jar:/Users/zznq/.ivy2/cache/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml/bundles/jackson-dataformat-yaml-2.9.4.jar:/Users/zznq/.ivy2/cache/org.yaml/snakeyaml/bundles/snakeyaml-1.18.jar:/Users/zznq/.ivy2/cache/com.fasterxml.jackson.core/jackson-core/bundles/jackson-core-2.9.4.jar:/Users/zznq/.ivy2/cache/io.swagger/swagger-models/bundles/swagger-models-1.5.18.jar:/Users/zznq/.ivy2/cache/io.swagger/swagger-annotations/bundles/swagger-annotations-1.5.18.jar:/Users/zznq/.ivy2/cache/com.google.guava/guava/bundles/guava-20.0.jar:/Users/zznq/.ivy2/cache/javax.validation/validation-api/jars/validation-api-1.1.0.Final.jar:/Users/zznq/.ivy2/cache/io.swagger/swagger-jaxrs/bundles/swagger-jaxrs-1.5.18.jar:/Users/zznq/.ivy2/cache/javax.ws.rs/jsr311-api/jars/jsr311-api-1.1.1.jar:/Users/zznq/.ivy2/cache/org.reflections/reflections/jars/reflections-0.9.11.jar:/Users/zznq/.ivy2/cache/org.javassist/javassist/bundles/javassist-3.21.0-GA.jar:/Users/zznq/.ivy2/cache/com.fasterxml.jackson.module/jackson-module-scala_2.12/bundles/jackson-module-scala_2.12-2.9.4.jar:/Users/zznq/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.12.6.jar:/Users/zznq/.ivy2/cache/com.fasterxml.jackson.core/jackson-annotations/bundles/jackson-annotations-2.9.4.jar:/Users/zznq/.ivy2/cache/com.fasterxml.jackson.core/jackson-databind/bundles/jackson-databind-2.9.4.jar:/Users/zznq/.ivy2/cache/com.fasterxml.jackson.module/jackson-module-paranamer/bundles/jackson-module-paranamer-2.9.4.jar:/Users/zznq/.ivy2/cache/com.thoughtworks.paranamer/paranamer/bundles/paranamer-2.8.jar:/Users/zznq/.ivy2/cache/org.neo4j.driver/neo4j-java-driver/jars/neo4j-java-driver-1.6.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 89.726840189 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.routes.TeamRoutes...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.routes.TeamRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding designated.director.api.WebServer by designated.director.routes.TeamRoutes[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.api.WebServer, designated.director.routes.TeamRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of designated.director.routes.TeamRoutes are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	designated.director.api.WebServer[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.routes.TeamRoutes,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(draftsJsonFormat,[Implicit]), UsedName(sprayJsonUnmarshallerConverter,[Implicit]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName(sprayJsonSourceReader,[Implicit]), UsedName(sprayJsonMarshallerConverter,[Implicit]), UsedName(teamActor,[Default]), UsedName(tlog,[Default]), UsedName(system,[Implicit]), UsedName($asInstanceOf,[Default]), UsedName(ttimeout,[Implicit]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(sprayJsonMarshaller$default$2,[Default]), UsedName(sprayJsonByteStringUnmarshaller,[Implicit]), UsedName(draftJsonFormat,[Implicit]), UsedName(leagueJsonFormat,[Implicit]), UsedName(==,[Default]), UsedName(sprayJsValueByteStringUnmarshaller,[Implicit]), UsedName(leaguesJsonFormat,[Implicit]), UsedName(asInstanceOf,[Default]), UsedName(sprayJsValueUnmarshaller,[Implicit]), UsedName(sprayJsonMarshaller,[Implicit]), UsedName(sprayJsonUnmarshaller,[Implicit]), UsedName(sprayJsonMarshallerConverter$default$2,[Default]), UsedName(sprayJsValueMarshaller,[Implicit]), UsedName(wait,[Default]), UsedName(teamRoutes,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(sprayJsValueMarshaller$default$1,[Default]), UsedName(teamsJsonFormat,[Implicit]), UsedName($init$,[Default]), UsedName(TeamRoutes,[Default]), UsedName(getClass,[Default]), UsedName(teamJsonFormat,[Implicit]))) invalidates 2 classes due to The designated.director.routes.TeamRoutes has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(draftsJsonFormat,[Implicit]), UsedName(sprayJsonUnmarshallerConverter,[Implicit]), UsedName(sprayJsonSourceReader,[Implicit]), UsedName(sprayJsonMarshallerConverter,[Implicit]), UsedName(system,[Implicit]), UsedName(ttimeout,[Implicit]), UsedName(sprayJsonByteStringUnmarshaller,[Implicit]), UsedName(draftJsonFormat,[Implicit]), UsedName(leagueJsonFormat,[Implicit]), UsedName(sprayJsValueByteStringUnmarshaller,[Implicit]), UsedName(leaguesJsonFormat,[Implicit]), UsedName(sprayJsValueUnmarshaller,[Implicit]), UsedName(sprayJsonMarshaller,[Implicit]), UsedName(sprayJsonUnmarshaller,[Implicit]), UsedName(sprayJsValueMarshaller,[Implicit]), UsedName(teamsJsonFormat,[Implicit]), UsedName(teamJsonFormat,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.api.WebServer, designated.director.routes.TeamRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.api.WebServer)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.repositories.BaseRepository...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.repositories.BaseRepository)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding designated.director.repositories.TeamMemoryRepository by designated.director.repositories.BaseRepository[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.repositories.TeamMemoryRepository, designated.director.repositories.BaseRepository)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.api.WebServer: Set(UsedName(BaseRepository,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.actors.TeamActor: Set(UsedName(getAll,[Default]), UsedName(BaseRepository,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delete,[Default]), UsedName(create,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(get,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.actors.Team: Set(UsedName(toString,[Default]), UsedName($isInstanceOf,[Default]), UsedName(BaseRepository,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.api.WebServer: Set(UsedName(BaseRepository,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.repositories.TeamMemoryRepository: Set(UsedName(toString,[Default]), UsedName($isInstanceOf,[Default]), UsedName(BaseRepository,[Default]), UsedName(isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(get,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.repositories.BaseRepository,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(getAll,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(BaseRepository,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delete,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(create,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(get,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]))) invalidates 5 classes due to The designated.director.repositories.BaseRepository has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName(getAll,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(BaseRepository,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delete,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(create,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(get,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.repositories.TeamMemoryRepository, designated.director.repositories.BaseRepository)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.api.WebServer, designated.director.actors.TeamActor, designated.director.actors.Team, designated.director.repositories.TeamMemoryRepository)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.api.JsonSupport...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.api.JsonSupport)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding designated.director.routes.TeamRoutes by designated.director.api.JsonSupport[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding designated.director.api.WebServer by designated.director.routes.TeamRoutes[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding designated.director.routes.DraftRoutes by designated.director.api.JsonSupport[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding designated.director.routes.LeagueRoutes by designated.director.api.JsonSupport[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.routes.TeamRoutes, designated.director.routes.LeagueRoutes, designated.director.api.WebServer, designated.director.routes.DraftRoutes, designated.director.api.JsonSupport)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of designated.director.routes.TeamRoutes are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	designated.director.api.WebServer[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of designated.director.routes.LeagueRoutes are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	designated.director.api.WebServer[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of designated.director.routes.DraftRoutes are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	designated.director.api.WebServer[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of designated.director.api.JsonSupport are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	designated.director.routes.DraftRoutes[0m
[0m[[0m[0mdebug[0m] [0m[0m	designated.director.routes.LeagueRoutes[0m
[0m[[0m[0mdebug[0m] [0m[0m	designated.director.routes.TeamRoutes[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.api.JsonSupport,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(leagueJsonFormat,[Implicit]), UsedName(leaguesJsonFormat,[Implicit]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(teamsJsonFormat,[Implicit]), UsedName(getClass,[Default]), UsedName(teamJsonFormat,[Implicit]))) invalidates 5 classes due to The designated.director.api.JsonSupport has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(leagueJsonFormat,[Implicit]), UsedName(leaguesJsonFormat,[Implicit]), UsedName(teamsJsonFormat,[Implicit]), UsedName(teamJsonFormat,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.routes.TeamRoutes, designated.director.routes.LeagueRoutes, designated.director.api.WebServer, designated.director.routes.DraftRoutes, designated.director.api.JsonSupport)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.routes.TeamRoutes, designated.director.routes.LeagueRoutes, designated.director.api.WebServer, designated.director.routes.DraftRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.TeamActor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.TeamActor)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.TeamActor)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of designated.director.actors.TeamActor are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	designated.director.api.WebServer[0m
[0m[[0m[0mdebug[0m] [0m[0m	designated.director.routes.TeamRoutes[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.TeamActor,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(postStop,[Default]), UsedName(Receive,[Default]), UsedName(equals,[Default]), UsedName(receive,[Default]), UsedName($isInstanceOf,[Default]), UsedName(CreateTeam,[Default]), UsedName(context,[Implicit]), UsedName(GetTeam,[Default]), UsedName(GetTeams,[Default]), UsedName($asInstanceOf,[Default]), UsedName(aroundPostStop,[Default]), UsedName(unhandled,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(aroundPreStart,[Default]), UsedName(TeamActor,[Default]), UsedName(clone,[Default]), UsedName(sender,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(self,[Implicit]), UsedName(supervisorStrategy,[Default]), UsedName(props,[Default]), UsedName(postRestart,[Default]), UsedName(aroundReceive,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(designated;director;actors;TeamActor;init;,[Default]), UsedName(preRestart,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(wait,[Default]), UsedName(DeleteTeam,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(log,[Default]), UsedName(preStart,[Default]), UsedName(aroundPostRestart,[Default]))) invalidates 3 classes due to The designated.director.actors.TeamActor has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(context,[Implicit]), UsedName(self,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.TeamActor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.routes.TeamRoutes, designated.director.api.WebServer)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.Teams...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.Teams)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.Teams)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.routes.TeamRoutes: Set(UsedName(toString,[Default]), UsedName(Teams,[Default]), UsedName(teams,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.api.JsonSupport: Set(UsedName(Teams,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.Teams,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Teams,[Default]), UsedName(productElement,[Default]), UsedName(designated;director;actors;Teams;init;,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(teams,[Default]))) invalidates 3 classes due to The designated.director.actors.Teams has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Teams,[Default]), UsedName(productElement,[Default]), UsedName(designated;director;actors;Teams;init;,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(teams,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.Teams)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.routes.TeamRoutes, designated.director.api.JsonSupport)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.DraftActor.DeleteDraft...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.DraftActor.DeleteDraft)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.DraftActor.DeleteDraft)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of designated.director.routes.DraftRoutes. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.DraftActor.DeleteDraft,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]))) invalidates 1 classes due to The designated.director.actors.DraftActor.DeleteDraft has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.DraftActor.DeleteDraft)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.DraftActor.CreateDraft...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.DraftActor.CreateDraft)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.DraftActor.CreateDraft)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of designated.director.routes.DraftRoutes. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.DraftActor.CreateDraft,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]))) invalidates 1 classes due to The designated.director.actors.DraftActor.CreateDraft has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.DraftActor.CreateDraft)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.TeamActor.GetTeam...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.TeamActor.GetTeam)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.TeamActor.GetTeam)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.routes.TeamRoutes: Set(UsedName(toString,[Default]), UsedName(apply,[Default]), UsedName(GetTeam,[Default]), UsedName(id,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.TeamActor.GetTeam,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(compose,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(andThen,[Default]), UsedName(apply,[Default]), UsedName(GetTeam,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(id,[Default]), UsedName(designated;director;actors;TeamActor;GetTeam;init;,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(unapply,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]))) invalidates 2 classes due to The designated.director.actors.TeamActor.GetTeam has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(compose,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(andThen,[Default]), UsedName(apply,[Default]), UsedName(GetTeam,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(id,[Default]), UsedName(designated;director;actors;TeamActor;GetTeam;init;,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(unapply,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.TeamActor.GetTeam)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.routes.TeamRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.repositories.TeamMemoryRepository...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.repositories.TeamMemoryRepository)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.repositories.TeamMemoryRepository)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.api.WebServer: Set(UsedName(TeamMemoryRepository,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.repositories.TeamMemoryRepository,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(getAll,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(TeamMemoryRepository,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delete,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(create,[Default]), UsedName(canEqual,[Default]), UsedName(designated;director;repositories;TeamMemoryRepository;init;,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(get,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(teams,[Default]))) invalidates 2 classes due to The designated.director.repositories.TeamMemoryRepository has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName(getAll,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(TeamMemoryRepository,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delete,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(create,[Default]), UsedName(canEqual,[Default]), UsedName(designated;director;repositories;TeamMemoryRepository;init;,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(get,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(teams,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.repositories.TeamMemoryRepository)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.api.WebServer)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.repositories.BaseRepositoryTypes...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.repositories.BaseRepositoryTypes)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.repositories.BaseRepositoryTypes)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.routes.TeamRoutes: Set(UsedName(toString,[Default]), UsedName(DeleteResult,[Default]), UsedName(BaseRepositoryTypes,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.actors.TeamActor: Set(UsedName(isInstanceOf,[Default]), UsedName(DeleteResult,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(AllResults,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.repositories.BaseRepositoryTypes,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(DeleteResult,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(AllResults,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(BaseRepositoryTypes,[Default]))) invalidates 3 classes due to The designated.director.repositories.BaseRepositoryTypes has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(DeleteResult,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(AllResults,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(BaseRepositoryTypes,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.repositories.BaseRepositoryTypes)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.routes.TeamRoutes, designated.director.actors.TeamActor)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.api.WebServer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.api.WebServer)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.api.WebServer)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.api.WebServer,ModifiedNames(changes = UsedName(teamActor,[Default]), UsedName(tlog,[Default]), UsedName(ltimeout,[Implicit]), UsedName(ttimeout,[Implicit]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(llog,[Default]), UsedName(WebServer,[Default]), UsedName(leagueJsonFormat,[Implicit]), UsedName(leaguesJsonFormat,[Implicit]), UsedName(leagueActor,[Default]), UsedName(teamRoutes,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(teamsJsonFormat,[Implicit]), UsedName(leagueRoutes,[Default]), UsedName(getClass,[Default]), UsedName(teamJsonFormat,[Implicit]))) invalidates 1 classes due to The designated.director.api.WebServer has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ltimeout,[Implicit]), UsedName(ttimeout,[Implicit]), UsedName(leagueJsonFormat,[Implicit]), UsedName(leaguesJsonFormat,[Implicit]), UsedName(teamsJsonFormat,[Implicit]), UsedName(teamJsonFormat,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.api.WebServer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.DraftActor.GetDraft...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.DraftActor.GetDraft)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.DraftActor.GetDraft)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of designated.director.routes.DraftRoutes. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.DraftActor.GetDraft,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]))) invalidates 1 classes due to The designated.director.actors.DraftActor.GetDraft has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.DraftActor.GetDraft)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.Drafts...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.Drafts)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.Drafts)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of designated.director.routes.DraftRoutes. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of designated.director.api.JsonSupport. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.Drafts,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(getClass,[Default]))) invalidates 1 classes due to The designated.director.actors.Drafts has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(getClass,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.Drafts)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.routes.DraftRoutes...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.routes.DraftRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding designated.director.api.WebServer by designated.director.routes.DraftRoutes[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.api.WebServer, designated.director.routes.DraftRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of designated.director.routes.DraftRoutes are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	designated.director.api.WebServer[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.routes.DraftRoutes,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(leagueJsonFormat,[Implicit]), UsedName(leaguesJsonFormat,[Implicit]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(teamsJsonFormat,[Implicit]), UsedName(getClass,[Default]), UsedName(teamJsonFormat,[Implicit]))) invalidates 2 classes due to The designated.director.routes.DraftRoutes has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(leagueJsonFormat,[Implicit]), UsedName(leaguesJsonFormat,[Implicit]), UsedName(teamsJsonFormat,[Implicit]), UsedName(teamJsonFormat,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.api.WebServer, designated.director.routes.DraftRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.api.WebServer)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.TeamActor.CreateTeam...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.TeamActor.CreateTeam)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.TeamActor.CreateTeam)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.routes.TeamRoutes: Set(UsedName(toString,[Default]), UsedName(CreateTeam,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.TeamActor.CreateTeam,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(compose,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(andThen,[Default]), UsedName(CreateTeam,[Default]), UsedName(apply,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(designated;director;actors;TeamActor;CreateTeam;init;,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productElement,[Default]), UsedName(team,[Default]), UsedName(wait,[Default]), UsedName(unapply,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]))) invalidates 2 classes due to The designated.director.actors.TeamActor.CreateTeam has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(compose,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(andThen,[Default]), UsedName(CreateTeam,[Default]), UsedName(apply,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(designated;director;actors;TeamActor;CreateTeam;init;,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productElement,[Default]), UsedName(team,[Default]), UsedName(wait,[Default]), UsedName(unapply,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.TeamActor.CreateTeam)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.routes.TeamRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.TeamActor.GetTeams...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.TeamActor.GetTeams)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.TeamActor.GetTeams)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.routes.TeamRoutes: Set(UsedName(toString,[Default]), UsedName(GetTeams,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.TeamActor.GetTeams,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(GetTeams,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]))) invalidates 2 classes due to The designated.director.actors.TeamActor.GetTeams has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(GetTeams,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.TeamActor.GetTeams)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.routes.TeamRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.LeagueActor.DeleteLeauge...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.LeagueActor.DeleteLeauge)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.LeagueActor.DeleteLeauge)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.routes.LeagueRoutes: Set(UsedName(DeleteLeauge,[Default]), UsedName(apply,[Default]), UsedName(id,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.LeagueActor.DeleteLeauge,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(compose,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(andThen,[Default]), UsedName(DeleteLeauge,[Default]), UsedName(apply,[Default]), UsedName($asInstanceOf,[Default]), UsedName(designated;director;actors;LeagueActor;DeleteLeauge;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(id,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(unapply,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]))) invalidates 2 classes due to The designated.director.actors.LeagueActor.DeleteLeauge has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(compose,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(andThen,[Default]), UsedName(DeleteLeauge,[Default]), UsedName(apply,[Default]), UsedName($asInstanceOf,[Default]), UsedName(designated;director;actors;LeagueActor;DeleteLeauge;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(id,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(unapply,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.LeagueActor.DeleteLeauge)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.routes.LeagueRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.DraftActor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.DraftActor)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.DraftActor)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of designated.director.routes.DraftRoutes. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of designated.director.api.WebServer. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.DraftActor,ModifiedNames(changes = UsedName(receive,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]))) invalidates 1 classes due to The designated.director.actors.DraftActor has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(receive,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.DraftActor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.routes.LeagueRoutes...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.routes.LeagueRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding designated.director.api.WebServer by designated.director.routes.LeagueRoutes[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.routes.LeagueRoutes, designated.director.api.WebServer)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of designated.director.routes.LeagueRoutes are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	designated.director.api.WebServer[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.routes.LeagueRoutes,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(draftsJsonFormat,[Implicit]), UsedName(sprayJsonUnmarshallerConverter,[Implicit]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName(LeagueRoutes,[Default]), UsedName(sprayJsonSourceReader,[Implicit]), UsedName(sprayJsonMarshallerConverter,[Implicit]), UsedName(system,[Implicit]), UsedName($asInstanceOf,[Default]), UsedName(ltimeout,[Implicit]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(llog,[Default]), UsedName(sprayJsonMarshaller$default$2,[Default]), UsedName(sprayJsonByteStringUnmarshaller,[Implicit]), UsedName(draftJsonFormat,[Implicit]), UsedName(leagueJsonFormat,[Implicit]), UsedName(==,[Default]), UsedName(sprayJsValueByteStringUnmarshaller,[Implicit]), UsedName(leaguesJsonFormat,[Implicit]), UsedName(asInstanceOf,[Default]), UsedName(leagueActor,[Default]), UsedName(sprayJsValueUnmarshaller,[Implicit]), UsedName(sprayJsonMarshaller,[Implicit]), UsedName(sprayJsonUnmarshaller,[Implicit]), UsedName(sprayJsonMarshallerConverter$default$2,[Default]), UsedName(sprayJsValueMarshaller,[Implicit]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(sprayJsValueMarshaller$default$1,[Default]), UsedName(teamsJsonFormat,[Implicit]), UsedName($init$,[Default]), UsedName(leagueRoutes,[Default]), UsedName(getClass,[Default]), UsedName(teamJsonFormat,[Implicit]))) invalidates 2 classes due to The designated.director.routes.LeagueRoutes has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(draftsJsonFormat,[Implicit]), UsedName(sprayJsonUnmarshallerConverter,[Implicit]), UsedName(sprayJsonSourceReader,[Implicit]), UsedName(sprayJsonMarshallerConverter,[Implicit]), UsedName(system,[Implicit]), UsedName(ltimeout,[Implicit]), UsedName(sprayJsonByteStringUnmarshaller,[Implicit]), UsedName(draftJsonFormat,[Implicit]), UsedName(leagueJsonFormat,[Implicit]), UsedName(sprayJsValueByteStringUnmarshaller,[Implicit]), UsedName(leaguesJsonFormat,[Implicit]), UsedName(sprayJsValueUnmarshaller,[Implicit]), UsedName(sprayJsonMarshaller,[Implicit]), UsedName(sprayJsonUnmarshaller,[Implicit]), UsedName(sprayJsValueMarshaller,[Implicit]), UsedName(teamsJsonFormat,[Implicit]), UsedName(teamJsonFormat,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.routes.LeagueRoutes, designated.director.api.WebServer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.api.WebServer)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.Draft...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.Draft)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.Draft)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of designated.director.routes.DraftRoutes. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of designated.director.api.JsonSupport. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.Draft,ModifiedNames(changes = UsedName(copy,[Default]), UsedName(numOfTeams,[Default]), UsedName(numOfRounds,[Default]), UsedName(notifyAll,[Default]), UsedName(designated;director;actors;Draft;init;,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(rounds,[Default]), UsedName(notify,[Default]), UsedName(getClass,[Default]), UsedName(teams,[Default]))) invalidates 1 classes due to The designated.director.actors.Draft has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy,[Default]), UsedName(numOfTeams,[Default]), UsedName(numOfRounds,[Default]), UsedName(notifyAll,[Default]), UsedName(designated;director;actors;Draft;init;,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(rounds,[Default]), UsedName(notify,[Default]), UsedName(getClass,[Default]), UsedName(teams,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.Draft)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.Leagues...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.Leagues)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.Leagues)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.api.JsonSupport: Set(UsedName(Leagues,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.routes.LeagueRoutes: Set(UsedName(leagues,[Default]), UsedName(Leagues,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.Leagues,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(leagues,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(designated;director;actors;Leagues;init;,[Default]), UsedName(Leagues,[Default]), UsedName(productIterator,[Default]))) invalidates 3 classes due to The designated.director.actors.Leagues has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(leagues,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(designated;director;actors;Leagues;init;,[Default]), UsedName(Leagues,[Default]), UsedName(productIterator,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.Leagues)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.api.JsonSupport, designated.director.routes.LeagueRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.LeagueActor.CreateLeague...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.LeagueActor.CreateLeague)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.LeagueActor.CreateLeague)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.routes.LeagueRoutes: Set(UsedName(CreateLeague,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.LeagueActor.CreateLeague,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(compose,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName(CreateLeague,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(andThen,[Default]), UsedName(apply,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(league,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(unapply,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(designated;director;actors;LeagueActor;CreateLeague;init;,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]))) invalidates 2 classes due to The designated.director.actors.LeagueActor.CreateLeague has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(compose,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName(CreateLeague,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(andThen,[Default]), UsedName(apply,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(league,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(unapply,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(designated;director;actors;LeagueActor;CreateLeague;init;,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.LeagueActor.CreateLeague)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.routes.LeagueRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.DraftActor.GetDrafts...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.DraftActor.GetDrafts)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.DraftActor.GetDrafts)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of designated.director.routes.DraftRoutes. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.DraftActor.GetDrafts,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(getClass,[Default]))) invalidates 1 classes due to The designated.director.actors.DraftActor.GetDrafts has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(getClass,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.DraftActor.GetDrafts)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.League...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.League)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.League)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.api.JsonSupport: Set(UsedName(League,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.routes.LeagueRoutes: Set(UsedName(id,[Default]), UsedName(League,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.League,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($asInstanceOf,[Default]), UsedName(name,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(id,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(League,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(designated;director;actors;League;init;,[Default]))) invalidates 3 classes due to The designated.director.actors.League has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($asInstanceOf,[Default]), UsedName(name,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(id,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(League,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(designated;director;actors;League;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.League)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.api.JsonSupport, designated.director.routes.LeagueRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.LeagueActor.GetLeagues...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.LeagueActor.GetLeagues)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.LeagueActor.GetLeagues)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.routes.LeagueRoutes: Set(UsedName(GetLeagues,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.LeagueActor.GetLeagues,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($asInstanceOf,[Default]), UsedName(GetLeagues,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]))) invalidates 2 classes due to The designated.director.actors.LeagueActor.GetLeagues has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($asInstanceOf,[Default]), UsedName(GetLeagues,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.LeagueActor.GetLeagues)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.routes.LeagueRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.TeamActor.DeleteTeam...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.TeamActor.DeleteTeam)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.TeamActor.DeleteTeam)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.routes.TeamRoutes: Set(UsedName(toString,[Default]), UsedName(apply,[Default]), UsedName(id,[Default]), UsedName(DeleteTeam,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.TeamActor.DeleteTeam,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(designated;director;actors;TeamActor;DeleteTeam;init;,[Default]), UsedName(compose,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(andThen,[Default]), UsedName(apply,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(id,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(DeleteTeam,[Default]), UsedName(unapply,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]))) invalidates 2 classes due to The designated.director.actors.TeamActor.DeleteTeam has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(designated;director;actors;TeamActor;DeleteTeam;init;,[Default]), UsedName(compose,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(andThen,[Default]), UsedName(apply,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(id,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(DeleteTeam,[Default]), UsedName(unapply,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.TeamActor.DeleteTeam)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.routes.TeamRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.LeagueActor.GetLeague...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.LeagueActor.GetLeague)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.LeagueActor.GetLeague)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.routes.LeagueRoutes: Set(UsedName(GetLeague,[Default]), UsedName(apply,[Default]), UsedName(id,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.LeagueActor.GetLeague,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(compose,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(designated;director;actors;LeagueActor;GetLeague;init;,[Default]), UsedName(productArity,[Default]), UsedName(andThen,[Default]), UsedName(GetLeague,[Default]), UsedName(apply,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(id,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(unapply,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]))) invalidates 2 classes due to The designated.director.actors.LeagueActor.GetLeague has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(compose,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(designated;director;actors;LeagueActor;GetLeague;init;,[Default]), UsedName(productArity,[Default]), UsedName(andThen,[Default]), UsedName(GetLeague,[Default]), UsedName(apply,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(id,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(unapply,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.LeagueActor.GetLeague)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.routes.LeagueRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.Team...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.Team)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.Team)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.routes.TeamRoutes: Set(UsedName(Team,[Default]), UsedName(toString,[Default]), UsedName(id,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.api.JsonSupport: Set(UsedName(Team,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.api.WebServer: Set(UsedName(Team,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of designated.director.repositories.TeamMemoryRepository: Set(UsedName(Team,[Default]), UsedName(toString,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(id,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.Team,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(Team,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($asInstanceOf,[Default]), UsedName(name,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(id,[Default]), UsedName(canEqual,[Default]), UsedName(designated;director;actors;Team;init;,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]))) invalidates 5 classes due to The designated.director.actors.Team has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName(Team,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($asInstanceOf,[Default]), UsedName(name,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(id,[Default]), UsedName(canEqual,[Default]), UsedName(designated;director;actors;Team;init;,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.Team)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.routes.TeamRoutes, designated.director.api.JsonSupport, designated.director.api.WebServer, designated.director.repositories.TeamMemoryRepository)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from designated.director.actors.LeagueActor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(designated.director.actors.LeagueActor)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(designated.director.actors.LeagueActor)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of designated.director.actors.LeagueActor are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	designated.director.api.WebServer[0m
[0m[[0m[0mdebug[0m] [0m[0m	designated.director.routes.LeagueRoutes[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(designated.director.actors.LeagueActor,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(postStop,[Default]), UsedName(Receive,[Default]), UsedName(equals,[Default]), UsedName(CreateLeague,[Default]), UsedName(receive,[Default]), UsedName($isInstanceOf,[Default]), UsedName(DeleteLeauge,[Default]), UsedName(GetLeague,[Default]), UsedName(context,[Implicit]), UsedName($asInstanceOf,[Default]), UsedName(aroundPostStop,[Default]), UsedName(GetLeagues,[Default]), UsedName(unhandled,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(aroundPreStart,[Default]), UsedName(LeagueActor,[Default]), UsedName(clone,[Default]), UsedName(sender,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(self,[Implicit]), UsedName(supervisorStrategy,[Default]), UsedName(props,[Default]), UsedName(postRestart,[Default]), UsedName(aroundReceive,[Default]), UsedName(leagues,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(designated;director;actors;LeagueActor;init;,[Default]), UsedName(preRestart,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(log,[Default]), UsedName(preStart,[Default]), UsedName(aroundPostRestart,[Default]))) invalidates 3 classes due to The designated.director.actors.LeagueActor has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(context,[Implicit]), UsedName(self,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(designated.director.actors.LeagueActor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(designated.director.routes.LeagueRoutes, designated.director.api.WebServer)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
